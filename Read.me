Video chat app tutorial from:
https://prog.world/creating-a-video-chat-with-node-js-socket-io-webrtc/

After wasting an inordinate number of hours reading everything on the internet and having nothing work for me
with the 3.1 release of the freejs package for a simple example with two tabs of the same browser talking
with each other I ended up figuring out what the problem was but doing the uexpected. I decided to make the calls
outside of the .then promise handling function and all the sudden the peer.on ('call'.....) handler started working
as it was supposed to. From there I changed my code to include an async function that uses the try/catch approch
including await to wait for the stream:

async function getMedia(constraints) {
  let stream = null;

  try {
    stream = await navigator.mediaDevices.getUserMedia(constraints);
    /* use the stream */
  } catch(err) {
    /* handle the error */
  }
}

as depicted in the man pages https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia

and placed all my code dealing with the stream after the await line. Now everything works.

So I commented out everything as I understand it and created this simple example.

I haven't yet managed to attach successfully the peerjs server to the nodejs server so you will need to install
peerjs with npm install -g peerjs open a new terminal and run it with:
 peerjs --port 3001 --key peerjs --path /myapp

 Then just open localhost:3030 on one of your tabs in Chrome (last version as of 7-18-2021), after the screen
 receives an alert, click on OK and then copy the url to another tab, cut an past the url in the second tab, 
 and now you should have 2 videos on each tab. Its working! Adjust to your situation and production needs!
 
